codeunit 52810 "QRFunctionsATREVIA"
{
    PROCEDURE ReturnTextForQRPT(pNoDoc: Code[20]; pTipoDoc: Option Factura, Abono): Text;
    VAR
        lRstCompanyInfo: Record "Company Information";
        lRstSalesInv: Record "Sales Invoice Header";
        lRstSalesCr: Record "Sales Cr.Memo Header";
        lRstCust: Record Customer;
        lRstCountries: Record "Country/Region";
        lRstNoSeries: Record "No. Series";
        lRstVATEntry: Record "VAT Entry";
        lRstCurrency: Record Currency;
        lRstTMPVATEntry: Record "VAT Entry" temporary;
        lRstVatPostSetup: Record "VAT Posting Setup";
        lRstGenLedgSetup: Record "General Ledger Setup";
        lTxtQR: Text;
        lTxtIntControl: Code[2];
        lVATBusPostGroup: Code[20];
        lVATCode: Code[5];
        lFirstLetter: Code[1];
        lVATAmount: Decimal;
        lVATBaseAmount: Decimal;
        lDocCurrencyCode: Code[10];
        lDocCurrencyFactor: Decimal;
        lDocAmountIncVAT: Decimal;
        lDocAmountIncVATLCY: Decimal;
        lDocPostDate: Date;
        lHash: Text[172];
    BEGIN
        IF lRstTMPVATEntry.FINDFIRST THEN ERROR('Las variables temporales no deben contener registros.');
        lRstCompanyInfo.GET;
        lRstCompanyInfo.TESTFIELD("VAT Registration No.");
        CASE pTipoDoc OF pTipoDoc::Factura: BEGIN
            lRstSalesInv.GET(pNoDoc);
            lRstCust.GET(lRstSalesInv."Bill-to Customer No.");
            lVATBusPostGroup:=lRstSalesInv."VAT Bus. Posting Group";
            lDocCurrencyCode:=lRstSalesInv."Currency Code";
            lDocCurrencyFactor:=lRstSalesInv."Currency Factor";
            lDocAmountIncVAT:=lRstSalesInv."Amount Including VAT";
            lTxtIntControl:='FC';
            lDocPostDate:=lRstSalesInv."Posting Date";
            lRstNoSeries.GET(lRstSalesInv."No. Series");
            lHash:=lRstSalesInv.Hash;
        END;
        pTipoDoc::Abono: BEGIN
            lRstSalesCr.GET(pNoDoc);
            lRstCust.GET(lRstSalesCr."Bill-to Customer No.");
            lVATBusPostGroup:=lRstSalesCr."VAT Bus. Posting Group";
            lDocCurrencyCode:=lRstSalesCr."Currency Code";
            lDocCurrencyFactor:=lRstSalesCr."Currency Factor";
            lDocAmountIncVAT:=lRstSalesCr."Amount Including VAT";
            lTxtIntControl:='NC';
            lDocPostDate:=lRstSalesCr."Posting Date";
            lRstNoSeries.GET(lRstSalesCr."No. Series");
            lHash:=lRstSalesCr.Hash;
        END;
        END;
        IF lHash = '' THEN EXIT('');
        lRstCust.TESTFIELD("Country/Region Code");
        lTxtQR:='A:' + lRstCompanyInfo."VAT Registration No." + '*';
        lTxtQR+='B:' + lRstCust."VAT Registration No." + '*';
        lRstCountries.GET(lRstCust."Country/Region Code");
        lRstGenLedgSetup.GET;
        IF lDocCurrencyCode IN['', lRstGenLedgSetup."LCY Code"]THEN BEGIN
            lRstCurrency.InitRoundingPrecision();
            IF lDocCurrencyFactor = 0 THEN lDocCurrencyFactor:=1;
        END
        ELSE
            lRstCurrency.GET(lDocCurrencyCode);
        lDocAmountIncVATLCY:=ROUND(lDocAmountIncVAT * (1 / lDocCurrencyFactor), lRstCurrency."Invoice Rounding Precision");
        lRstVatPostSetup.RESET;
        lRstVatPostSetup.SETRANGE("VAT Bus. Posting Group", lVATBusPostGroup);
        IF lRstVatPostSetup.FINDFIRST()THEN BEGIN
            lTxtQR+='C';
            CASE lRstVatPostSetup."SAF-T PT VAT Type Descr. PT" OF lRstVatPostSetup."SAF-T PT VAT Type Descr. PT"::"VAT Azores": lTxtQR+='PT-AC';
            lRstVatPostSetup."SAF-T PT VAT Type Descr. PT"::"VAT Madeira": lTxtQR+='PT-MA';
            lRstVatPostSetup."SAF-T PT VAT Type Descr. PT"::"VAT Portugal Mainland": lTxtQR+='PT'
            ELSE
                lTxtQR+=lRstCountries."ISO Code";
            END;
            lTxtQR+='*';
        END;
        lTxtQR+='D:' + lTxtIntControl + '*';
        lTxtQR+='E:N*';
        lTxtQR+='F:' + DELCHR(FORMAT(lDocPostDate, 0, 9), '=', '-') + '*';
        lTxtQR+='G:' + lTxtIntControl + ' ' + FormatSerie(lRstNoSeries.Code) + '/' + FormatCod(pNoDoc) + '*';
        lTxtQR+='H:0*';
        lRstTMPVATEntry.DELETEALL();
        lRstVATEntry.RESET;
        lRstVATEntry.SETCURRENTKEY("Document No.", "Posting Date");
        lRstVATEntry.SETRANGE("Document No.", pNoDoc);
        lRstVATEntry.SETRANGE("Posting Date", lDocPostDate);
        lRstVATEntry.SETAUTOCALCFIELDS("SAF-T PT VAT Code PT");
        IF lRstVATEntry.FINDSET THEN REPEAT CLEAR(lVATCode);
                IF lRstVatPostSetup.GET(lRstVATEntry."VAT Bus. Posting Group", lRstVATEntry."VAT Prod. Posting Group")THEN CASE lRstVatPostSetup."SAF-T PT VAT Type Descr. PT" OF lRstVatPostSetup."SAF-T PT VAT Type Descr. PT"::"VAT Azores": lVATCode:='PT-AC';
                    lRstVatPostSetup."SAF-T PT VAT Type Descr. PT"::"VAT Madeira": lVATCode:='PT-MA';
                    lRstVatPostSetup."SAF-T PT VAT Type Descr. PT"::"VAT Portugal Mainland": lVATCode:='PT' END;
                lRstTMPVATEntry.SETRANGE("VAT Prod. Posting Group", lVATCode);
                IF NOT lRstTMPVATEntry.FINDFIRST()THEN BEGIN
                    lRstTMPVATEntry.INIT;
                    lRstTMPVATEntry."VAT Prod. Posting Group":=lVATCode;
                    lRstTMPVATEntry.INSERT;
                END;
            UNTIL lRstVATEntry.NEXT() = 0;
        lRstTMPVATEntry.RESET;
        IF lRstTMPVATEntry.FINDSET THEN REPEAT CLEAR(lFirstLetter);
                CASE lRstTMPVATEntry."VAT Prod. Posting Group" OF 'PT-AC': lFirstLetter:='J';
                'PT-MA': lFirstLetter:='K';
                'PT': lFirstLetter:='I';
                END;
                lTxtQR+=lFirstLetter + '1:' + lRstTMPVATEntry."VAT Prod. Posting Group" + '*';
                lVATAmount:=0;
                lVATBaseAmount:=0;
                lRstVATEntry.SETRANGE("Document No.", pNoDoc);
                lRstVATEntry.SETRANGE("Posting Date", lDocPostDate);
                lRstVATEntry.SETRANGE("SAF-T PT VAT Code PT", lRstVATEntry."SAF-T PT VAT Code PT"::"No tax rate");
                CASE lRstTMPVATEntry."VAT Prod. Posting Group" OF 'PT-AC': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Azores");
                'PT-MA': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Madeira");
                'PT': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Portugal Mainland");
                END;
                IF lRstVATEntry.FINDSET THEN REPEAT lVATAmount+=lRstVATEntry.Amount;
                        lVATBaseAmount+=lRstVATEntry.Base;
                    UNTIL lRstVATEntry.NEXT = 0;
                lTxtQR+=lFirstLetter + '2:' + FormatNumber(lVATBaseAmount) + '*';
                lVATAmount:=0;
                lVATBaseAmount:=0;
                lRstVATEntry.SETRANGE("Document No.", pNoDoc);
                lRstVATEntry.SETRANGE("Posting Date", lDocPostDate);
                lRstVATEntry.SETRANGE("SAF-T PT VAT Code PT", lRstVATEntry."SAF-T PT VAT Code PT"::"Reduced tax rate");
                CASE lRstTMPVATEntry."VAT Prod. Posting Group" OF 'PT-AC': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Azores");
                'PT-MA': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Madeira");
                'PT': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Portugal Mainland");
                END;
                IF lRstVATEntry.FINDSET THEN REPEAT lVATAmount+=lRstVATEntry.Amount;
                        lVATBaseAmount+=lRstVATEntry.Base;
                    UNTIL lRstVATEntry.NEXT = 0;
                lTxtQR+=lFirstLetter + '3:' + FormatNumber(lVATBaseAmount) + '*';
                lTxtQR+=lFirstLetter + '4:' + FormatNumber(lVATAmount) + '*';
                lVATAmount:=0;
                lVATBaseAmount:=0;
                lRstVATEntry.SETRANGE("Document No.", pNoDoc);
                lRstVATEntry.SETRANGE("Posting Date", lDocPostDate);
                lRstVATEntry.SETRANGE("SAF-T PT VAT Code PT", lRstVATEntry."SAF-T PT VAT Code PT"::"Intermediate tax rate");
                CASE lRstTMPVATEntry."VAT Prod. Posting Group" OF 'PT-AC': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Azores");
                'PT-MA': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Madeira");
                'PT': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Portugal Mainland");
                END;
                IF lRstVATEntry.FINDSET THEN REPEAT lVATAmount+=lRstVATEntry.Amount;
                        lVATBaseAmount+=lRstVATEntry.Base;
                    UNTIL lRstVATEntry.NEXT = 0;
                lTxtQR+=lFirstLetter + '5:' + FormatNumber(lVATBaseAmount) + '*';
                lTxtQR+=lFirstLetter + '6:' + FormatNumber(lVATAmount) + '*';
                lVATAmount:=0;
                lVATBaseAmount:=0;
                lRstVATEntry.SETRANGE("Document No.", pNoDoc);
                lRstVATEntry.SETRANGE("Posting Date", lDocPostDate);
                lRstVATEntry.SETRANGE("SAF-T PT VAT Code PT", lRstVATEntry."SAF-T PT VAT Code PT"::"Normal tax rate");
                CASE lRstTMPVATEntry."VAT Prod. Posting Group" OF 'PT-AC': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Azores");
                'PT-MA': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Madeira");
                'PT': lRstVATEntry.SETRANGE("SAF-T PT VAT Type Descr. PT", lRstVATEntry."SAF-T PT VAT Type Descr. PT"::"VAT Portugal Mainland");
                END;
                IF lRstVATEntry.FINDSET THEN REPEAT lVATAmount+=lRstVATEntry.Amount;
                        lVATBaseAmount+=lRstVATEntry.Base;
                    UNTIL lRstVATEntry.NEXT = 0;
                lTxtQR+=lFirstLetter + '7:' + FormatNumber(lVATBaseAmount) + '*';
                lTxtQR+=lFirstLetter + '8:' + FormatNumber(lVATAmount) + '*';
            UNTIL lRstTMPVATEntry.NEXT() = 0;
        lVATAmount:=0;
        lVATBaseAmount:=0;
        lRstVATEntry.SETRANGE("Document No.", pNoDoc);
        lRstVATEntry.SETRANGE("Posting Date", lDocPostDate);
        lRstVATEntry.SETRANGE("SAF-T PT VAT Code PT", lRstVATEntry."SAF-T PT VAT Code PT"::Others);
        IF lRstVATEntry.FINDSET THEN REPEAT lVATAmount+=lRstVATEntry.Amount;
                lVATBaseAmount+=lRstVATEntry.Base;
            UNTIL lRstVATEntry.NEXT = 0;
        lTxtQR+='L:' + FormatNumber(lVATBaseAmount) + '*';
        lTxtQR+='M:' + '0' + '*';
        lTxtQR+='N:' + '0' + '*';
        lTxtQR+='O:' + FormatNumber(lDocAmountIncVATLCY) + '*';
        lTxtQR+='P:' + '0' + '*';
        lTxtQR+='Q:' + COPYSTR(lHash, 1, 1) + COPYSTR(lHash, 11, 1) + COPYSTR(lHash, 21, 1) + COPYSTR(lHash, 31, 1);
        lTxtQR+='R:' + '9999' + '*';
        EXIT(lTxtQR);
    END;
    PROCEDURE FormatCod(parTexto: Text[150]): Text[150];
    BEGIN
        EXIT(DELCHR(parTexto, '=', '/ABCDEFGHIJKLMN¥OPQRSTUVWXYZabcdefghigklmn¤opqrstuvwxyz-_\|'));
    END;
    PROCEDURE FormatSerie(parTexto: Text[150]): Text[150];
    BEGIN
        EXIT(DELCHR(parTexto, '=', '/-_\|'));
    END;
    LOCAL PROCEDURE FormatNumber(pNumber: Decimal): Text;
    BEGIN
        EXIT(FORMAT(pNumber, 0, '<Precision,2:2><Standard Format,2>'));
    END;
}
